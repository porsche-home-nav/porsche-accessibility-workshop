@import "~@porsche-design-system/utilities/scss";
.ks-carousel {
  position: relative;

  &__mood {
    display: block;
    width: 100%;
    height: auto;
  }

  p-link {
    margin-left: auto;
  }

  // Slider plugin functional styles
  .splide {
    &__arrows {
      display: flex;
      justify-content: space-between;
      position: absolute;
      z-index: 1;
      top: 50%;
      width: 100%;
      transform: translateY(-50%);
      pointer-events: none;
    }

    &__arrow {
      pointer-events: all;
    }

    &__arrow--prev {
      margin-left: -$p-spacing-48;
    }

    &__arrow--next {
      margin-right: -$p-spacing-48;
    }

    &__list {
      flex-wrap: nowrap;
      flex: auto !important;
      width: auto !important;
      margin-left: -0.5rem !important;
      margin-right: -0.5rem !important;

      @media (min-width: 1000px) {
        margin-left: -1.125rem !important;
        margin-right: -1.125rem !important;
      }
    }

    &__slide {
      padding-bottom: $p-spacing-8;
      text-align: center;
      width: 100% !important;

      padding-left: 0.5rem !important;
      padding-right: 0.5rem !important;

      @media (min-width: 1000px) {
        padding-left: 1.125rem !important;
        padding-right: 1.125rem !important;
        width: 33.333333% !important;
      }
    }

    &__pagination {
      display: flex;
      width: 100%;
      margin-top: $p-spacing-32;
      margin-bottom: $p-spacing-32;
      li {
        padding: $p-spacing-4;
      }

      &__page {
        display: block;
        border-radius: 50%;
        width: p-px-to-rem(12px);
        height: p-px-to-rem(12px);
        background-color: $p-color-neutral-contrast-medium;
        border: none;

        &.is-active {
          background-color: $p-color-state-active;
        }
      }
    }
  }
}

.ks-accessible {
  .ks-carousel {
    .splide {
      &__slide {
        position: relative;
        transform: translate3d(0, 0, 0); // add new context for fixed
      }

      &__pagination {
        &__page {
          cursor: pointer;

          &:focus {
            @include p-focus();
          }
        }
      }
    }

    // the CSS pseudo-content trick
    p-link a::after {
      content: "";
      position: fixed; // workaround because of position relative in slot context
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
    }
  }
}
